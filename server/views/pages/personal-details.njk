{% extends "../partials/case.njk" %}
{% set pageTitle = makePageTitle({ pageHeading: ["Contact", "Personal details"] }) %}
{% set currentNavSection = 'personal-details' %}
{% set currentSectionName = 'Personal Details' %}
{% set headerPersonName = personalDetails.name.forename + ' ' + personalDetails.name.surname %}
{% set headerCRN = crn %}
{% set headerDob = personalDetails.dateOfBirth  %}
{% set headerGender = personalDetails.preferredGender  %}

{% block beforeContent %}
    {{ govukBreadcrumbs({
      items: [
        {
          text: "My cases",
          href: "/case"
        },
        {
          text: headerPersonName,
          href: "/case/" + crn,
          attributes: { "data-ai-id": "breadcrumbPersonNameLink" }
        },
        {
          text: currentSectionName
        }
      ]
    }) }}
{% endblock %}

{% block pageContent %}
    {% set contactDetails %}
        {% set mainAddress = personalDetails.mainAddress %}

            {% set address %}
                {% if personalDetails.mainAddress %}
                    {{ addressToList(mainAddress).join('<br>') | safe }}
                    {% set addressDetails %}
                        {{ govukSummaryList({
                            rows: [
                              {
                                key: { html: '<span data-qa="mainAddressTelephoneLabel">Address telephone</span>' },
                                value: { html: '<span data-qa="addressTelephoneValue" class="app-!-font-family-tabular">' + mainAddress.telephoneNumber + '</span>' }
                              } if mainAddress.telephoneNumber,
                              {
                                key: { html:  '<span data-qa="addressTypeLabel">Type of address</span>' },
                                value: { html: '<span data-qa="addressTypeValue">' + mainAddress.type + (' (verified)' if mainAddress.verified else ' (not verified)') + '</span>' }
                              },
                              {
                                key: { html: '<span data-qa="mainAddressStartDateLabel">Start date</span>' },
                                value: { html: '<span data-qa="mainAddressStartDateValue">' + mainAddress.from | dateWithYear + '</span>' }
                              },
                              {
                                key: { html: '<span data-qa="mainAddressNotesLabel">Notes</span>' },
                                value: { html: '<span data-qa="mainAddressNotesValue">' + mainAddress.notes | nl2br if mainAddress.notes else 'No notes' + '</span>' }
                              }
                            ]
                        }) }}
                {% endset %}

                {{ govukDetails({
                  summaryText: "View address details",
                  classes: 'govuk-!-margin-top-2 govuk-!-margin-bottom-0',
                  html: addressDetails
                }) }}

            {% else %}
                No main address<br />
                <a href="/case/{{ crn }}/handoff/delius">Add a main address in NDelius</a>
            {% endif %}
        {% endset %}

        {% set personalContacts %}
            {% if personalDetails.contacts.length > 0 %}
              <ul class="govuk-list">
                {% for contact in personalDetails.contacts %}
                  <li>
                    <p>
                      {{ contact.relationshipType }}:<br />
                      <a data-ai-id="personalContactLink" href="personal-details/personal-contact/{{ contact.contactId }}">{{ contact.name | fullName }} â€“ {{ contact.relationship }}</a>
                    </p>
                  </li>
                {% endfor %}
              </ul>
            {% else %}
              None
            {% endif %}
        {% endset %}

        {% set otherAddressesHtml %}
            {% set otherAddressCount = personalDetails.otherAddressCount %}
            {% set previousAddressCount = personalDetails.previousAddressCount %}
            {% set hasOtherAddresses = otherAddressCount > 0 %}
            {% set hasPreviousAddresses = previousAddressCount > 0 %}

            {% if hasOtherAddresses or hasPreviousAddresses %}
              {% set otherAddressString = '1 other address' if otherAddressCount == 1 else otherAddressCount + ' other addresses' %}
              {% set previousAddressString = '1 previous address' if previousAddressCount == 1 else previousAddressCount + ' previous addresses' %}

              {% if hasOtherAddresses and hasPreviousAddresses %}
              <ul class="govuk-list">
                <li>{{ otherAddressString }}</li>
                <li>{{ previousAddressString }}</li>
              </ul>
              {% elseif hasOtherAddresses %}
                {{ otherAddressString }}
              {% else %}
                {{ previousAddressString }}
              {% endif %}

              <p>
                <a href="personal-details/addresses">View all addresses</a>
              </p>
            {% else %}
              No other addresses
            {% endif %}
        {% endset %}

        {% set mainAddressWarningHtml %}
            No main address<br />
            <a href="#">Add a main address in NDelius</a>
        {% endset %}

        {{ govukSummaryList({
            rows: [
              {
                key: { html: '<span data-qa="telephoneNumberLabel">Phone number</span>' },
                value: { html: ('<span data-qa="telephoneNumberValue" class="app-!-font-family-tabular">' + personalDetails.telephoneNumber + '</span>') if personalDetails.telephoneNumber else '<span data-qa="telephoneNumberValue">No phone number</span>' }
              },
                {
                  key: { html: '<span data-qa="mobileNumberLabel">Mobile number</span>' },
                  value: { html: ('<span data-qa="mobileNumberValue" class="app-!-font-family-tabular">' + personalDetails.mobileNumber + '</span>') if personalDetails.mobileNumber else '<span data-qa="mobileNumberValue">No mobile number</span>' }
                },
              {
                key: { html: '<span data-qa="emailAddressLabel">Email address</span>' },
                value: { html: '<span data-qa="emailAddressValue">' + personalDetails.email + '</span>' if personalDetails.email else '<span data-qa="emailAddressValue">No email address</span>' },
                actions: {
                  items: [
                    {
                      href: "/case/" + crn + "/handoff/delius",
                      text: "Change",
                      visuallyHiddenText: "email address"
                    }
                  ]
                }
              },
              {
                key: { html: '<span data-qa="mainAddressLabel">' + 'Main address<br><span class="govuk-!-font-size-16 govuk-!-font-weight-regular">' + mainAddress.lastUpdated | lastUpdatedDate + '</span></span>' },
                value: { html: '<span data-qa="mainAddressValue">' + address + '</br></span>' }
              },
              {
                key: { html: '<span data-qa="otherAddressesLabel">Other addresses</span>' },
                value: { html: '<span data-qa="otherAddressesValue">' + otherAddressesHtml + '</span>' }
              },
              {
                key: { html: '<span data-qa="contactsLabel">Contacts</span>'},
                value: { html: '<span data-qa="contactsValue">' + personalContacts + '</span>' }
              }
            ]
        }) }}
    {% endset %}

    {{ appSummaryCard({
        attributes: {'data-qa': 'contactDetailsCard'},
        titleText: "Contact details",
        classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
        html: contactDetails,
        actions: {
        items: [
          {
            href: "#",
            text: "Change in NDelius"
          }
        ]
      } if false
    }) }}

    {% set personalDetailsHtml %}
        {% set dateOfBirthAndAge %}
            {{ personalDetails.dateOfBirth | dateWithYear }} ({{ personalDetails.dateOfBirth | yearsSince }} years old)
        {% endset %}

        {% set disabilities %}
            {% if personalDetails.disabilities.disabilities.length > 0 %}
              <ul class="govuk-list">
              {% for disability in personalDetails.disabilities.disabilities %}
                <li>
                  {{ disability }}
                </li>
              {% endfor %}
              </ul>
              <p><a href="/case/{{ crn }}/personal-details/disabilities">View details and notes</a></p>
            {% else %}
              None
            {% endif %}
        {% endset %}

        {% set adjustments %}
            {% if personalDetails.provisions.provisions.length > 0 %}
                <ul class="govuk-list">
                {% for adjustment in personalDetails.provisions.provisions %}
                  <li>
                    {{ adjustment }}
                  </li>
                {% endfor %}
                </ul>
                <p><a href="/case/{{ crn }}/personal-details/adjustments">View details and notes</a></p>
            {% else %}
            None
            {% endif %}
        {% endset %}

        {% set circumstances %}
            {% if personalDetails.circumstances.circumstances.length > 0 %}
                <ul class="govuk-list">
                {% for circumstance in personalDetails.circumstances.circumstances %}
                <li>
                  {{ circumstance.type }}: {{ circumstance.subType }}
                </li>
                {% endfor %}
                </ul>
                <p><a href="/case/{{ crn }}/personal-details/circumstances">View details and previous circumstances</a></p>
            {% else %}
                None
            {% endif %}
        {% endset %}

        {% set criminogenicNeeds %}
            {% if needs.identifiedNeeds.length > 0 %}
                <ul class="govuk-list">
                    {% for need in needs.identifiedNeeds %}
                    <li>
                    {{ need.name }}
                    </li>
                    {% endfor %}
                </ul>
            {% else %}
                None
            {% endif %}

            <p>
            <a href="{{ sentencePlanLink() }}" target="_blank">View sentence plan</a>
            </p>

        {% endset %}

        {% set aliases %}
            {% if personalDetails.aliases.length > 0 %}
                <ul class="govuk-list">
                {% for alias in personalDetails.aliases %}
                     <li>
                        {{ alias | fullName }}
                     </li>
                 {% endfor %}
                 </ul>
            {% else %}
                 None known
            {% endif %}
        {% endset %}

        {% set documents %}
            {% set documents = personalDetails.documents %}
                <ul class="govuk-list govuk-!-margin-top-0">
                {% if documents.length > 0 %}
                    {% for doc in documents %}
                    <li>
                        <a data-ai-id="documentDownload" href="personal-details/documents/{{ doc.id }}/download" download="{{ doc.name }}">{{ doc.name }}</a><br>
                            <span class="govuk-!-font-size-16">
                            {% if doc.lastUpdated %}
                            {{ doc.lastUpdated | lastUpdatedDate }}
                        {% else %}
                            Unavailable
                        {% endif %}
                        </span>
                    </li>
                    {% endfor %}
                {% else %}
                    No personal documents
                {% endif %}
            </ul>
        {% endset %}

        {{ govukSummaryList({
            rows: [
              {
                key: { html: '<span data-qa="nameLabel">Name</span>' },
                value: { html: '<span data-qa="nameValue">' + personalDetails.name | fullName + '</span>' }
              },
              {
                key: { html: '<span data-qa="dateOfBirthLabel">Date of birth</span>' },
                value: { html: '<span data-qa="dateOfBirthValue">' + dateOfBirthAndAge + '</span>'}
              },
              {
                key: { html: '<span data-qa="preferredNameLabel">Preferred name/Known as</span>' },
                value: { html: '<span data-qa="preferredNameValue">' + personalDetails.preferredName + '</span>'}
              } if personalDetails.preferredName,
              {
                key: { html: '<span data-qa="aliasesLabel">Aliases</span>' },
                value: { html:  '<span data-qa="aliasesValue">' + aliases + '</span>'}
              },
              {
                key: { html: '<span data-qa="previousSurnameLabel">Previous surname</span>' },
                value: { html: '<span data-qa="previousSurnameValue">' + personalDetails.previousSurname + '</span>'}
              } if personalDetails.previousSurname,
              {
                key: { html: '<span data-qa="preferredLanguageLabel">Preferred language</span>' },
                value: { html: '<span data-qa="preferredLanguageValue">' + personalDetails.preferredLanguage + ' (interpreter needed) </span>' if personalDetails.requiresInterpreter else '<span data-qa="preferredLanguageValue">' + personalDetails.preferredLanguage  + '</span>' }
              } if personalDetails.preferredLanguage,
              {
                key: { html: '<span data-qa="currentCircumstancesLabel">Current circumstances<br><span class="govuk-!-font-size-16 govuk-!-font-weight-regular">' + personalDetails.circumstances.lastUpdated | lastUpdatedDate + '</span></span>' },
                value: { html: '<span data-qa="currentCircumstancesValue">' + circumstances + '</span>' }
              },
              {
                key: { html: '<span data-qa="disabilitiesLabel">Disabilities<br><span class="govuk-!-font-size-16 govuk-!-font-weight-regular">' + personalDetails.disabilities.lastUpdated | lastUpdatedDate + '</span></span>' },
                value: { html: '<span data-qa="disabilitiesValue">' + disabilities + '</span>' }
              },
              {
                key: { html: '<span data-qa="adjustmentsLabel">Adjustments<br><span class="govuk-!-font-size-16 govuk-!-font-weight-regular">' + personalDetails.provisions.lastUpdated | lastUpdatedDate +'</span></span>' },
                value: { html: '<span data-qa="adjustmentsValue">' + adjustments + '</span>'}
              },
              {
                key: { html: '<span data-qa="criminogenicNeedsLabel">Criminogenic needs</span>' },
                value: { html: '<span data-qa="criminogenicNeedsValue">' + criminogenicNeeds + '</span>' }
              },
              {
                key: { html: '<span data-qa="documentsLabel">Personal documents</span>' },
                value: { html: '<span data-qa="documentsValue">' + documents + '</span>' }
              }
            ]
        }) }}
    {% endset %}

    {{ appSummaryCard({
        attributes: {'data-qa': 'personalDetailsCard'},
        titleText: "Personal details",
        classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
        html: personalDetailsHtml,
        actions: {}
    }) }}

    {% set identityNumbers %}
        {{ govukSummaryList({
            rows: [
                {
                    key: { html: '<span data-qa="crnLabel">CRN</span>' },
                    value: { html: '<span data-qa="crnValue" class="app-!-font-family-tabular">' + personalDetails.crn + '</span>' }
                },
                {
                    key: { html: '<span data-qa="pncLabel">PNC number</span>' },
                    value: { html: '<span data-qa="pncValue" class="app-!-font-family-tabular">' + personalDetails.pnc  + '</span>' }
                } if personalDetails.pnc,
                {
                    key: { html: '<span data-qa="nomsLabel">Prison number</span>' },
                    value: { html: '<span data-qa="nomsValue" class="app-!-font-family-tabular">' + personalDetails.noms  + '</span>' }
                } if personalDetails.noms
            ]
        }) }}
    {% endset %}

    {{ appSummaryCard({
        attributes: {'data-qa': 'identityNumberCard'},
        titleText: "Identity numbers",
        classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
        html: identityNumbers,
        actions: {}
    }) }}

    {% set equality %}
      {{ govukSummaryList({
        rows: [
          {
            key: { html: '<span data-qa="religionOrBeliefLabel">Religion or belief</span>' },
            value: { html: '<span data-qa="religionOrBeliefValue">' + personalDetails.religionOrBelief + '</span>' }
          } if personalDetails.religionOrBelief,
          {
            key: { html: '<span data-qa="sexLabel">Sex</span>' },
            value: { html: '<span data-qa="sexValue">' + personalDetails.sex + '</span>' }
          },
          {
            key: { html: '<span data-qa="genderIdentityLabel">Gender identity</span>' },
            value: { html: '<span data-qa="genderIdentityValue">' + personalDetails.genderIdentity + '</span>' }
          } if personalDetails.genderIdentity,
          {
            key: { html: '<span data-qa="selfDescribedGenderLabel">Self-described gender</span>' },
            value: { html: '<span data-qa="selfDescribedGenderValue">' + personalDetails.selfDescribedGender + '</span>' }
          } if personalDetails.selfDescribedGender,
          {
            key: { html: '<span data-qa="sexualOrientationLabel">Sexual orientation</span>' },
            value: { html: '<span data-qa="sexualOrientationValue">' + personalDetails.sexualOrientation + '</span>' }
          } if personalDetails.sexualOrientation
        ]
      }) }}
      <p class="govuk-!-margin-top-2 govuk-!-margin-bottom-0"><a href="/case/{{ crn }}/handoff/delius">View more in NDelius</a></p>
    {% endset %}

    {{ appSummaryCard({
        attributes: {'data-qa': 'equalityMonitoringCard'},
        titleText: "Equality monitoring",
        classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
        html: equality,
        actions: {}
    }) }}
{% endblock %}